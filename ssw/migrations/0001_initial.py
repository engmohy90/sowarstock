# Generated by Django 2.1.2 on 2018-10-26 18:26

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import easy_thumbnails.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address1', models.CharField(max_length=255)),
                ('address2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(max_length=255)),
                ('state', models.CharField(max_length=255)),
                ('zipcode', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Categorie',
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Earning',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('contributor', 'Contributor'), ('sowarstock', 'SowarStock')], max_length=255)),
                ('amount', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Faq',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('answer', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='FaqPersonal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('answer', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Featured',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('slider', 'Slider'), ('contributors', 'Contributors'), ('featured', 'Featured')], max_length=255)),
                ('image', easy_thumbnails.fields.ThumbnailerImageField(blank=True, null=True, upload_to='featured/')),
            ],
        ),
        migrations.CreateModel(
            name='LegalDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('document', models.FileField(upload_to='legal/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_no', models.IntegerField(unique=True)),
                ('total', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orderitem', to='ssw.Order')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField()),
                ('receipt', models.FileField(upload_to='payments/')),
                ('earning', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ssw.Earning')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public_id', models.IntegerField(unique=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('image', easy_thumbnails.fields.ThumbnailerImageField(upload_to='products/')),
                ('released', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('pending_approval', 'Pending Approval'), ('pending_admin_approval', 'Pending Admin Approval'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending_approval', max_length=255)),
                ('rejection_reason', models.CharField(blank=True, choices=[('title_description', 'Title/Description'), ('size_resolution', 'Size and/or Resolution'), ('trademark_copyright', 'Trademark and/or Copyright'), ('lighting_exposure', 'Lighting and/or Expusure'), ('noise_artifact', 'Noise, Artifact, and/or Film Grain'), ('focus', 'Focus'), ('farming_cropping', 'Framing, Cropping, and/or Composition'), ('camera_sensor', 'Camera Sensor Dirt/Spot'), ('overuse_noise', 'Overuse of Noise Reduction'), ('over_editing', 'Over-editing'), ('lens_problems', 'Lens Problems (as Purple or Fringing)'), ('similar_submissions', 'Similar Submissions'), ('limited_commercial_value', 'Limited Commercial Value'), ('keywords', 'Keywords'), ('other', 'Other')], max_length=255, null=True)),
                ('rejection_note', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('keywords', models.CharField(max_length=255)),
                ('standard_price', models.IntegerField(default=15)),
                ('extended_price', models.IntegerField(default=149)),
                ('category', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='ssw.Category')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ShoppingCart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ShoppingCartItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_type', models.CharField(choices=[('standard', 'Standard'), ('extended', 'Extended')], max_length=255)),
                ('status', models.CharField(choices=[('in_cart', 'In Cart'), ('removed', 'Removed'), ('purchased', 'Purchased')], default='in_cart', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ssw.ShoppingCart')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ssw.Product')),
            ],
        ),
        migrations.CreateModel(
            name='SowarStockUser',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('type', models.CharField(choices=[('contributor', 'Contributor'), ('client', 'Client'), ('admin', 'Admin'), ('image_reviewer', 'Image Reviewer'), ('financial_admin', 'Financial Admin')], max_length=255)),
                ('country_code', models.CharField(blank=True, max_length=5, null=True)),
                ('phone', models.CharField(blank=True, max_length=10, null=True)),
                ('preferred_language', models.CharField(blank=True, choices=[('en', 'English'), ('ar', 'Arabic')], max_length=2, null=True)),
                ('email_verification_code', models.UUIDField(default=uuid.uuid4)),
                ('email_verified', models.BooleanField(default=False)),
                ('forgot_password_verification', models.UUIDField(blank=True, null=True, unique=True)),
                ('forgot_password_status', models.CharField(choices=[('none', 'None'), ('not_used', 'Not Used'), ('used', 'Used')], default='none', max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profile_images/')),
            ],
            options={
                'verbose_name': 'Sowar Stock User',
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('main_category', models.ManyToManyField(to='ssw.Category')),
            ],
            options={
                'verbose_name': 'Sub Categorie',
            },
        ),
        migrations.CreateModel(
            name='UserRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.CharField(default='pending_approval', max_length=255)),
                ('status', models.CharField(choices=[('pending_approval', 'Pending Approval'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending_approval', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('sowarstockuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ssw.SowarStockUser')),
            ],
            options={
                'verbose_name': 'Client User',
            },
            bases=('ssw.sowarstockuser',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Contributor',
            fields=[
                ('sowarstockuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ssw.SowarStockUser')),
                ('status', models.CharField(choices=[('unverified', 'Unverified'), ('verified', 'Verified')], max_length=255)),
                ('photo_id', models.FileField(blank=True, null=True, upload_to='photo_id/')),
                ('photo_id_verified', models.BooleanField(default=False)),
                ('display_name', models.CharField(blank=True, max_length=255, null=True)),
                ('job_title', models.CharField(blank=True, max_length=255, null=True)),
                ('portfolio_url', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Contributor User',
            },
            bases=('ssw.sowarstockuser',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='sowarstockuser',
            name='address',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='ssw.Address'),
        ),
        migrations.AddField(
            model_name='review',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ssw.SowarStockUser'),
        ),
        migrations.AddField(
            model_name='review',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ssw.Product'),
        ),
        migrations.AddField(
            model_name='product',
            name='subcategory',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ssw.SubCategory'),
        ),
        migrations.AddField(
            model_name='orderitem',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product', to='ssw.Product'),
        ),
        migrations.AddField(
            model_name='orderitem',
            name='shopping_cart_item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='shopping_cart_item', to='ssw.ShoppingCartItem'),
        ),
        migrations.AddField(
            model_name='featured',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='ssw.Product'),
        ),
        migrations.AddField(
            model_name='faqpersonal',
            name='replier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='replier', to='ssw.SowarStockUser'),
        ),
        migrations.AddField(
            model_name='earning',
            name='orderItem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ssw.OrderItem'),
        ),
        migrations.AddField(
            model_name='collection',
            name='products',
            field=models.ManyToManyField(to='ssw.Product'),
        ),
        migrations.AddField(
            model_name='userrequest',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ssw.Contributor'),
        ),
        migrations.AddField(
            model_name='shoppingcart',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ssw.Client'),
        ),
        migrations.AddField(
            model_name='product',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ssw.Contributor'),
        ),
        migrations.AddField(
            model_name='payment',
            name='contributor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ssw.Contributor'),
        ),
        migrations.AddField(
            model_name='order',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ssw.Client'),
        ),
        migrations.AddField(
            model_name='featured',
            name='contributor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='ssw.Contributor'),
        ),
        migrations.AddField(
            model_name='faqpersonal',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner', to='ssw.Contributor'),
        ),
        migrations.AddField(
            model_name='earning',
            name='contributor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='ssw.Contributor'),
        ),
        migrations.AddField(
            model_name='collection',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ssw.Contributor'),
        ),
    ]
